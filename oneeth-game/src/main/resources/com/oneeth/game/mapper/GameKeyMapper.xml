<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oneeth.game.mapper.GameKeyMapper">
  <resultMap id="BaseResultMap" type="com.oneeth.game.entity.GameKey">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="get_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="game_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="term_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="min_key" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="max_key" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="park_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="is_luckly" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="luckly_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="recharge_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="to_walletaddress" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="from_walletaddress" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="notionalPooling_hash" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="free_1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="free_2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="free_3" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="revision" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="created_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.oneeth.game.entity.GameKey">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="get_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="game_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="term_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="min_key" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="max_key" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="park_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="is_luckly" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="luckly_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="recharge_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="to_walletaddress" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="from_walletaddress" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="notionalPooling_hash" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="free_1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="free_2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="free_3" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="revision" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="created_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="key_array" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, get_type, game_code, term_number, min_key, max_key, park_time, is_luckly, luckly_code, 
    recharge_amount, to_walletaddress, from_walletaddress, notionalPooling_hash, free_1, 
    free_2, free_3, revision, created_by, created_time, updated_by, updated_time
  </sql>
  <sql id="Blob_Column_List">
    key_array
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.oneeth.game.entity.GameKeyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_game_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.oneeth.game.entity.GameKeyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_game_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_game_key
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_game_key
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.oneeth.game.entity.GameKeyExample">
    delete from t_game_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oneeth.game.entity.GameKey">
    insert into t_game_key (id, get_type, game_code, 
      term_number, min_key, max_key, 
      park_time, is_luckly, luckly_code, 
      recharge_amount, to_walletaddress, from_walletaddress, 
      notionalPooling_hash, free_1, free_2, 
      free_3, revision, created_by, 
      created_time, updated_by, updated_time, 
      key_array)
    values (#{id,jdbcType=VARCHAR}, #{getType,jdbcType=VARCHAR}, #{gameCode,jdbcType=VARCHAR}, 
      #{termNumber,jdbcType=VARCHAR}, #{minKey,jdbcType=VARCHAR}, #{maxKey,jdbcType=VARCHAR}, 
      #{parkTime,jdbcType=TIMESTAMP}, #{isLuckly,jdbcType=VARCHAR}, #{lucklyCode,jdbcType=VARCHAR}, 
      #{rechargeAmount,jdbcType=DECIMAL}, #{toWalletaddress,jdbcType=VARCHAR}, #{fromWalletaddress,jdbcType=VARCHAR}, 
      #{notionalpoolingHash,jdbcType=VARCHAR}, #{free1,jdbcType=VARCHAR}, #{free2,jdbcType=VARCHAR}, 
      #{free3,jdbcType=VARCHAR}, #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{keyArray,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oneeth.game.entity.GameKey">
    insert into t_game_key
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="getType != null">
        get_type,
      </if>
      <if test="gameCode != null">
        game_code,
      </if>
      <if test="termNumber != null">
        term_number,
      </if>
      <if test="minKey != null">
        min_key,
      </if>
      <if test="maxKey != null">
        max_key,
      </if>
      <if test="parkTime != null">
        park_time,
      </if>
      <if test="isLuckly != null">
        is_luckly,
      </if>
      <if test="lucklyCode != null">
        luckly_code,
      </if>
      <if test="rechargeAmount != null">
        recharge_amount,
      </if>
      <if test="toWalletaddress != null">
        to_walletaddress,
      </if>
      <if test="fromWalletaddress != null">
        from_walletaddress,
      </if>
      <if test="notionalpoolingHash != null">
        notionalPooling_hash,
      </if>
      <if test="free1 != null">
        free_1,
      </if>
      <if test="free2 != null">
        free_2,
      </if>
      <if test="free3 != null">
        free_3,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="keyArray != null">
        key_array,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="getType != null">
        #{getType,jdbcType=VARCHAR},
      </if>
      <if test="gameCode != null">
        #{gameCode,jdbcType=VARCHAR},
      </if>
      <if test="termNumber != null">
        #{termNumber,jdbcType=VARCHAR},
      </if>
      <if test="minKey != null">
        #{minKey,jdbcType=VARCHAR},
      </if>
      <if test="maxKey != null">
        #{maxKey,jdbcType=VARCHAR},
      </if>
      <if test="parkTime != null">
        #{parkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLuckly != null">
        #{isLuckly,jdbcType=VARCHAR},
      </if>
      <if test="lucklyCode != null">
        #{lucklyCode,jdbcType=VARCHAR},
      </if>
      <if test="rechargeAmount != null">
        #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="toWalletaddress != null">
        #{toWalletaddress,jdbcType=VARCHAR},
      </if>
      <if test="fromWalletaddress != null">
        #{fromWalletaddress,jdbcType=VARCHAR},
      </if>
      <if test="notionalpoolingHash != null">
        #{notionalpoolingHash,jdbcType=VARCHAR},
      </if>
      <if test="free1 != null">
        #{free1,jdbcType=VARCHAR},
      </if>
      <if test="free2 != null">
        #{free2,jdbcType=VARCHAR},
      </if>
      <if test="free3 != null">
        #{free3,jdbcType=VARCHAR},
      </if>
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="keyArray != null">
        #{keyArray,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oneeth.game.entity.GameKeyExample" resultType="java.lang.Long">
    select count(*) from t_game_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_game_key
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.getType != null">
        get_type = #{record.getType,jdbcType=VARCHAR},
      </if>
      <if test="record.gameCode != null">
        game_code = #{record.gameCode,jdbcType=VARCHAR},
      </if>
      <if test="record.termNumber != null">
        term_number = #{record.termNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.minKey != null">
        min_key = #{record.minKey,jdbcType=VARCHAR},
      </if>
      <if test="record.maxKey != null">
        max_key = #{record.maxKey,jdbcType=VARCHAR},
      </if>
      <if test="record.parkTime != null">
        park_time = #{record.parkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isLuckly != null">
        is_luckly = #{record.isLuckly,jdbcType=VARCHAR},
      </if>
      <if test="record.lucklyCode != null">
        luckly_code = #{record.lucklyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeAmount != null">
        recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.toWalletaddress != null">
        to_walletaddress = #{record.toWalletaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.fromWalletaddress != null">
        from_walletaddress = #{record.fromWalletaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.notionalpoolingHash != null">
        notionalPooling_hash = #{record.notionalpoolingHash,jdbcType=VARCHAR},
      </if>
      <if test="record.free1 != null">
        free_1 = #{record.free1,jdbcType=VARCHAR},
      </if>
      <if test="record.free2 != null">
        free_2 = #{record.free2,jdbcType=VARCHAR},
      </if>
      <if test="record.free3 != null">
        free_3 = #{record.free3,jdbcType=VARCHAR},
      </if>
      <if test="record.revision != null">
        revision = #{record.revision,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.keyArray != null">
        key_array = #{record.keyArray,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_game_key
    set id = #{record.id,jdbcType=VARCHAR},
      get_type = #{record.getType,jdbcType=VARCHAR},
      game_code = #{record.gameCode,jdbcType=VARCHAR},
      term_number = #{record.termNumber,jdbcType=VARCHAR},
      min_key = #{record.minKey,jdbcType=VARCHAR},
      max_key = #{record.maxKey,jdbcType=VARCHAR},
      park_time = #{record.parkTime,jdbcType=TIMESTAMP},
      is_luckly = #{record.isLuckly,jdbcType=VARCHAR},
      luckly_code = #{record.lucklyCode,jdbcType=VARCHAR},
      recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      to_walletaddress = #{record.toWalletaddress,jdbcType=VARCHAR},
      from_walletaddress = #{record.fromWalletaddress,jdbcType=VARCHAR},
      notionalPooling_hash = #{record.notionalpoolingHash,jdbcType=VARCHAR},
      free_1 = #{record.free1,jdbcType=VARCHAR},
      free_2 = #{record.free2,jdbcType=VARCHAR},
      free_3 = #{record.free3,jdbcType=VARCHAR},
      revision = #{record.revision,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      key_array = #{record.keyArray,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_game_key
    set id = #{record.id,jdbcType=VARCHAR},
      get_type = #{record.getType,jdbcType=VARCHAR},
      game_code = #{record.gameCode,jdbcType=VARCHAR},
      term_number = #{record.termNumber,jdbcType=VARCHAR},
      min_key = #{record.minKey,jdbcType=VARCHAR},
      max_key = #{record.maxKey,jdbcType=VARCHAR},
      park_time = #{record.parkTime,jdbcType=TIMESTAMP},
      is_luckly = #{record.isLuckly,jdbcType=VARCHAR},
      luckly_code = #{record.lucklyCode,jdbcType=VARCHAR},
      recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      to_walletaddress = #{record.toWalletaddress,jdbcType=VARCHAR},
      from_walletaddress = #{record.fromWalletaddress,jdbcType=VARCHAR},
      notionalPooling_hash = #{record.notionalpoolingHash,jdbcType=VARCHAR},
      free_1 = #{record.free1,jdbcType=VARCHAR},
      free_2 = #{record.free2,jdbcType=VARCHAR},
      free_3 = #{record.free3,jdbcType=VARCHAR},
      revision = #{record.revision,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oneeth.game.entity.GameKey">
    update t_game_key
    <set>
      <if test="getType != null">
        get_type = #{getType,jdbcType=VARCHAR},
      </if>
      <if test="gameCode != null">
        game_code = #{gameCode,jdbcType=VARCHAR},
      </if>
      <if test="termNumber != null">
        term_number = #{termNumber,jdbcType=VARCHAR},
      </if>
      <if test="minKey != null">
        min_key = #{minKey,jdbcType=VARCHAR},
      </if>
      <if test="maxKey != null">
        max_key = #{maxKey,jdbcType=VARCHAR},
      </if>
      <if test="parkTime != null">
        park_time = #{parkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLuckly != null">
        is_luckly = #{isLuckly,jdbcType=VARCHAR},
      </if>
      <if test="lucklyCode != null">
        luckly_code = #{lucklyCode,jdbcType=VARCHAR},
      </if>
      <if test="rechargeAmount != null">
        recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="toWalletaddress != null">
        to_walletaddress = #{toWalletaddress,jdbcType=VARCHAR},
      </if>
      <if test="fromWalletaddress != null">
        from_walletaddress = #{fromWalletaddress,jdbcType=VARCHAR},
      </if>
      <if test="notionalpoolingHash != null">
        notionalPooling_hash = #{notionalpoolingHash,jdbcType=VARCHAR},
      </if>
      <if test="free1 != null">
        free_1 = #{free1,jdbcType=VARCHAR},
      </if>
      <if test="free2 != null">
        free_2 = #{free2,jdbcType=VARCHAR},
      </if>
      <if test="free3 != null">
        free_3 = #{free3,jdbcType=VARCHAR},
      </if>
      <if test="revision != null">
        revision = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="keyArray != null">
        key_array = #{keyArray,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.oneeth.game.entity.GameKey">
    update t_game_key
    set get_type = #{getType,jdbcType=VARCHAR},
      game_code = #{gameCode,jdbcType=VARCHAR},
      term_number = #{termNumber,jdbcType=VARCHAR},
      min_key = #{minKey,jdbcType=VARCHAR},
      max_key = #{maxKey,jdbcType=VARCHAR},
      park_time = #{parkTime,jdbcType=TIMESTAMP},
      is_luckly = #{isLuckly,jdbcType=VARCHAR},
      luckly_code = #{lucklyCode,jdbcType=VARCHAR},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      to_walletaddress = #{toWalletaddress,jdbcType=VARCHAR},
      from_walletaddress = #{fromWalletaddress,jdbcType=VARCHAR},
      notionalPooling_hash = #{notionalpoolingHash,jdbcType=VARCHAR},
      free_1 = #{free1,jdbcType=VARCHAR},
      free_2 = #{free2,jdbcType=VARCHAR},
      free_3 = #{free3,jdbcType=VARCHAR},
      revision = #{revision,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      key_array = #{keyArray,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oneeth.game.entity.GameKey">
    update t_game_key
    set get_type = #{getType,jdbcType=VARCHAR},
      game_code = #{gameCode,jdbcType=VARCHAR},
      term_number = #{termNumber,jdbcType=VARCHAR},
      min_key = #{minKey,jdbcType=VARCHAR},
      max_key = #{maxKey,jdbcType=VARCHAR},
      park_time = #{parkTime,jdbcType=TIMESTAMP},
      is_luckly = #{isLuckly,jdbcType=VARCHAR},
      luckly_code = #{lucklyCode,jdbcType=VARCHAR},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      to_walletaddress = #{toWalletaddress,jdbcType=VARCHAR},
      from_walletaddress = #{fromWalletaddress,jdbcType=VARCHAR},
      notionalPooling_hash = #{notionalpoolingHash,jdbcType=VARCHAR},
      free_1 = #{free1,jdbcType=VARCHAR},
      free_2 = #{free2,jdbcType=VARCHAR},
      free_3 = #{free3,jdbcType=VARCHAR},
      revision = #{revision,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>